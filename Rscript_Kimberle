#this is where we input the main script for analysis
#begin with script setup. Install the required packages and import the data

# set working directory
setwd("C:/Users/shenykk/Desktop/CODON/singlecellproject_diya_tim")

# install Signac and annotation packages
setRepositories(ind=1:3)
install.packages("Signac")

if (!require("BiocManager", quietly = TRUE))
  install.packages("BiocManager")

BiocManager::install("EnsDb.Hsapiens.v86")
BiocManager::install("BSgenome.Hsapiens.UCSC.hg38")
BiocManager::install("biovizBase")

# load libraries
library(Signac)
library(Seurat)
library(ggplot2)
library(patchwork)
library(EnsDb.Hsapiens.v86)
library(BSgenome.Hsapiens.UCSC.hg38)
library(biovizBase)
library(dplyr)
library("writexl")


# load RNA and atac data
counts <- Read10X_h5(filename = "lymph_node_lymphoma_14k_filtered_feature_bc_matrix.h5")
fragpath <- "lymph_node_lymphoma_14k_atac_fragments.tsv.gz"

# counts has 2 tables
# $`Gene Expression` 36601 x 736320 sparse Matrix of class "dgCMatrix"
# $Peaks 71766 x 736320 sparse Matrix of class "dgCMatrix"

# get gene annotations for hg38
annotation <- GetGRangesFromEnsDb(ensdb = EnsDb.Hsapiens.v86)
seqlevels(annotation) <- paste0('chr', seqlevels(annotation))

# create a Seurat object containing the RNA adata
lymph <- CreateSeuratObject(
  counts = counts$`Gene Expression`,
  assay = "RNA"
)

# create ATAC assay and add it to the object
lymph[["ATAC"]] <- CreateChromatinAssay(
  counts = counts$Peaks,
  sep = c(":", "-"),
  fragments = fragpath,
  annotation = annotation
)

# 3. Normalize the gene expression data and perform QC

# QC
DefaultAssay(lymph) <- "RNA"
lymph[["percent.mt"]] <- PercentageFeatureSet(lymph, pattern = "^MT-")
VlnPlot(lymph, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
lymph <- subset(lymph, subset = nFeature_RNA > 100 & nFeature_RNA < 10000 & percent.mt < 10)
# 14645 to 14433 cells


# Normalize
lymph <- NormalizeData(lymph, normalization.method = "LogNormalize", scale.factor = 10000)

lymph <- CellCycleScoring(lymph, 
                          s.features   = cc.genes.updated.2019$s.genes,
                          g2m.features = cc.genes.updated.2019$g2m.genes)




# 4. Run PCA and create a UMAP plot using the gene expression data

# Find variable features
lymph <- FindVariableFeatures(lymph, selection.method = "vst", nfeatures = 2000)
# Scale data
all.genes <- rownames(lymph)
lymph <- ScaleData(lymph, features = all.genes)
# PCA
lymph <- RunPCA(lymph, features = VariableFeatures(object = lymph))
# Elbow plot
ElbowPlot(lymph)

# Find neighbors and clusters
lymph <- FindNeighbors(lymph, dims = 1:10) 
lymph <- FindClusters(lymph, resolution = 0.5)
# UMAP
lymph <- RunUMAP(lymph, dims = 1:10)
DimPlot(lymph, reduction = "umap", label = TRUE)
DimPlot(lymph, reduction = "umap", label = TRUE, group.by = "Phase")





# 5. Add gene annotation information to the ATAC assay

# I think annotation information was added earlier, let's check:

DefaultAssay(lymph) <- "ATAC"
lymph[['ATAC']]

#ChromatinAssay data with 71766 features for 14433 cells
#Variable features: 0 
#Genome: 
#  Annotation present: TRUE 
#Motifs present: FALSE 
#Fragment files: 1 


# 6. Run LSI and UMAP using the ATAC assay

DefaultAssay(lymph) <- "ATAC"
Idents(lymph) <- "orig.ident"

lymph <- NucleosomeSignal(lymph)
lymph <- TSSEnrichment(lymph)

VlnPlot(
  object = lymph,
  features = c("nCount_RNA", "nCount_ATAC", "TSS.enrichment", "nucleosome_signal"),
  ncol = 4,
  pt.size = 1
)

# filter out low quality cells
lymph <- subset(
  x = lymph,
  subset = nCount_ATAC < 150000 &
    nCount_RNA < 50000 &
    nCount_ATAC > 500 &
    nCount_RNA > 500 &
    nucleosome_signal < 1.5 &
    TSS.enrichment > 1
)
lymph
# 14433  to 12717 


lymph <- FindTopFeatures(lymph, min.cutoff = 5)
lymph <- RunTFIDF(lymph)
lymph <- RunSVD(lymph)

saveRDS(lymph, "lymph_after_LSI2.RDS")

DepthCor(lymph)

lymph <- RunUMAP(object = lymph, reduction = 'lsi', dims = 2:40)
lymph <- FindNeighbors(object = lymph, reduction = 'lsi', dims = 2:40)
lymph <- FindClusters(object = lymph, verbose = FALSE, algorithm = 3)
DimPlot(object = lymph, label = TRUE) 



# 7. Create a joint UMAP and clustering using both the RNA and ATAC data

# build a joint neighbor graph using both assays
lymph <- FindMultiModalNeighbors(
  object = lymph,
  reduction.list = list("pca", "lsi"), 
  dims.list = list(1:20, 2:40),
  modality.weight.name = "RNA.weight",
  verbose = TRUE
)

# build a joint UMAP visualization
lymph <- RunUMAP(
  object = lymph,
  nn.name = "weighted.nn",
  assay = "RNA",
  verbose = TRUE
)

DimPlot(lymph, label = TRUE, repel = TRUE, reduction = "umap") 


# 8. Find gene expression markers for each cluster of cells
# 9. Plot the top unique marker genes for each cluster
# 10. Annotate the tumor cells

# use gene expression data for this
# in the vignette, reference dataset from SeuratDisk was used for cell label transfer
# going to try using cell marker genes for each cluster


saveRDS(lymph, "lymph.RDS")
lymph <- readRDS("lymph.RDS")

DefaultAssay(lymph) <- "RNA" # use gene expression data for this
combined.markers <- FindAllMarkers(lymph, only.pos = TRUE, min.pct = 0.25, logfc.threshold = 0.25)
t <- combined.markers %>% group_by(cluster) %>% top_n(n = 10, wt = avg_log2FC)
View(t)

DimPlot(lymph, group.by = "Phase", reduction = "umap")

# top 3 markers for clusters 0, 1, 2, 3
FeaturePlot(
  object = lymph,
  features = c('ARHGAP24', 'GPM6A', 'CADM1', 'AGAP1', 
               'FYN', 'LYST', 'ANK3', 'TC2N'),
  pt.size = 0.1,
  max.cutoff = 'q95',
  ncol = 4
)

# top 3 markers for clusters 4, 5, 6, 7
FeaturePlot(
  object = lymph,
  features = c('LINC01934', 'CBLB', 'KLRD1', 'MYBL1', 
               'IL7R', 'TCF7', 'SLC8A1', 'LRMDA'),
  pt.size = 0.1,
  max.cutoff = 'q95',
  ncol = 4
)

# top 3 markers for clusters 8, 9, 10, 11
FeaturePlot(
  object = lymph,
  features = c('KCNMA1', 'AL162414.1', 'BANK1', 'CCSER1', 
               'CCL4L2', 'SHC4', 'DGKG', 'IGF2BP3'),
  pt.size = 0.1,
  max.cutoff = 'q95',
  ncol = 4
)

# top 3 markers for clusters 12, 13
FeaturePlot(
  object = lymph,
  features = c('FLT3', 'ZNF366', 'SEMA3A', 'MAGI1'),
  pt.size = 0.1,
  max.cutoff = 'q95',
  ncol = 2
)


write_xlsx(t,"marker_genes_new.xlsx")

# https://www.proteinatlas.org/ENSG00000260314-MRC1/single+cell+type

FeaturePlot(
  object = lymph,
  features = c('MS4A1', 'BANK1', 'PAX5'),
  pt.size = 0.1,
  max.cutoff = 'q95'
)

# B cell markers
FeaturePlot(
  object = lymph,
  features = c('CD19', 'CD20', 'CD79A', 'CD79B'),
  pt.size = 0.1,
  max.cutoff = 'q95'
)

# T cell markers
FeaturePlot(
  object = lymph,
  features = c('CD3D', 'CD3E', 'CD3G', 'CD4', 'CD8A'),
  pt.size = 0.1,
  max.cutoff = 'q95'
)


# myeloid/monocyte markers
FeaturePlot(
  object = lymph,
  features = c('LYZ', 'CD68', 'CD14', 'CD163'),
  pt.size = 0.1,
  max.cutoff = 'q95'
)

# endothelial
FeaturePlot(
  object = lymph,
  features = c('CD31', 'CD34', 'CD45', 'LYVE1',"ICAM-1"),
  pt.size = 0.1,
  max.cutoff = 'q95'
)





# 0: T cell
# 1: Dying
# 2: Myeloid/monocytes
# 3: Tumour B cell
# 4: T cell
# 5: T cell
# 6: Tumour B cell
# 7: B cell
# 8: T cell
# 9: Tumour B cell
# 10: Tumour B cell
# 11: Endothelial
# 12: Endothelial
# 13: 



# 0: Tumour B cell
# 1: T cell
# 2: T cell
# 3: T cell
# 4: T cell
# 5: T cell 
# 6: T cell 
# 7: Myeloid/monocytes
# 8: Myeloid/monocytes
# 9: B cell
# 10: T cell
# 11: Tumour B cell
# 12: Myeloid/monocytes
# 13: Endothelial


new.cluster.ids <- c("Tumour B cell","T cell", "T cell", "T cell", "T cell", 
                     "T cell", "T cell", "Myeloid/monocytes", "Myeloid/monocytes", 
                     "B cell","T cell", "Tumour B cell", "Myeloid/monocytes", "Endothelial")


names(new.cluster.ids) <- levels(lymph)
lymph <- RenameIdents(lymph, new.cluster.ids)
DimPlot(lymph, reduction = "umap", label = TRUE)

# Add phase

#names(which(lymph$Phase == "G2M"))

Tumour_B_cell_G2M <- WhichCells(lymph, ident = "Tumour B cell", cells = names(which(lymph$Phase == "G2M")))
Tumour_B_cell_S <- WhichCells(lymph, ident = "Tumour B cell", cells = names(which(lymph$Phase == "S")))
Tumour_B_cell_G1 <- WhichCells(lymph, ident = "Tumour B cell", cells = names(which(lymph$Phase == "G1")))

lymph <- SetIdent(lymph, cells = Tumour_B_cell_G2M, value = 'Tumour B cell_G2M')
lymph <- SetIdent(lymph, cells = Tumour_B_cell_S, value = 'Tumour B cell_S')
lymph <- SetIdent(lymph, cells = Tumour_B_cell_G1, value = 'Tumour B cell_G1')

T_cell_G2M <- WhichCells(lymph, ident = "T cell", cells = names(which(lymph$Phase == "G2M")))
T_cell_S <- WhichCells(lymph, ident = "T cell", cells = names(which(lymph$Phase == "S")))
T_cell_G1 <- WhichCells(lymph, ident = "T cell", cells = names(which(lymph$Phase == "G1")))

lymph <- SetIdent(lymph, cells = T_cell_G2M, value = 'T cell_G2M')
lymph <- SetIdent(lymph, cells = T_cell_S, value = 'T cell_S')
lymph <- SetIdent(lymph, cells = T_cell_G1, value = 'T cell_G1')

DimPlot(lymph, reduction = "umap", label = TRUE, repel = TRUE, cols =  c("#FF5733", "#FFD633", "#33FF57", "#33D1FF", "#8C33FF", "#FF33B2", "#FF3371", "#33FFCA", "#33A8FF"))
# change colour palette for better visualization


# Get cell type markers
DefaultAssay(lymph) <- "RNA" # use gene expression data for this
combined.markers <- FindAllMarkers(lymph, only.pos = TRUE, min.pct = 0.25, logfc.threshold = 0.25)
ta <- combined.markers %>% group_by(cluster) %>% top_n(n = 10, wt = avg_log2FC)
View(ta)
write_xlsx(ta,"marker_genes_annotated_new.xlsx")


# 11. Link ATAC peaks to the top marker genes

DefaultAssay(lymph) <- "ATAC"

# first compute the GC content for each peak
lymph <- RegionStats(lymph, genome = BSgenome.Hsapiens.UCSC.hg38)

# link peaks to genes
lymph <- LinkPeaks(
  object = lymph,
  peak.assay = "ATAC",
  expression.assay = "RNA",
  genes.use = c("PAX5", "MS4A1", "GPM6A", "DTL", "SMC4", "ARHGAP24", "SLC8A1", "BANK1", "SEMA3A")
)


# 12.Plot DNA accessibility and gene expression for some of the marker genes
idents.plot <- c("T cell_G1","T cell_S", "T cell_G2M" , "B cell", "Tumour B cell_G1", "Tumour B cell_S", 
                 "Tumour B cell_G2M", "Myeloid/monocytes", "Endothelial")

CoveragePlot(
  object = lymph,
  region = "MS4A1",
  features = "MS4A1",
  expression.assay = "RNA",
  idents = idents.plot,
  extend.upstream = 500,
  extend.downstream = 10000
)

CoveragePlot(
  object = lymph,
  region = "PAX5",
  features = "PAX5",
  expression.assay = "RNA",
  idents = idents.plot,
  extend.upstream = 1000,
  extend.downstream = 120000
)


CoveragePlot(
  object = lymph,
  region = "GPM6A",
  features = "GPM6A",
  expression.assay = "RNA",
  idents = idents.plot,
  extend.upstream = 100000,
  extend.downstream = 200000
)

CoveragePlot(
  object = lymph,
  region = "DTL",
  features = "DTL",
  expression.assay = "RNA",
  idents = idents.plot,
  extend.upstream = 100000,
  extend.downstream = 200000
)

CoveragePlot(
  object = lymph,
  region = "BANK1",
  features = "BANK1",
  expression.assay = "RNA",
  idents = idents.plot,
  extend.upstream = 100000,
  extend.downstream = 200000
)


CoveragePlot(
  object = lymph,
  region = "SMC4",
  features = "SMC4",
  expression.assay = "RNA",
  idents = idents.plot,
  extend.upstream = 100000,
  extend.downstream = 200000
)


CoveragePlot(
  object = lymph,
  region = "ARHGAP24",
  features = "ARHGAP24",
  expression.assay = "RNA",
  idents = idents.plot,
  extend.upstream = 100000,
  extend.downstream = 200000
)

CoveragePlot(
  object = lymph,
  region = "SLC8A1",
  features = "SLC8A1",
  expression.assay = "RNA",
  idents = idents.plot,
  extend.upstream = 100000,
  extend.downstream = 200000
)

CoveragePlot(
  object = lymph,
  region = "SEMA3A",
  features = "SEMA3A",
  expression.assay = "RNA",
  idents = idents.plot,
  extend.upstream = 100000,
  extend.downstream = 200000
)

####################
##### motifs########
####################

if (!require("BiocManager", quietly = TRUE))
  install.packages("BiocManager")

BiocManager::install("JASPAR2020")
BiocManager::install("TFBSTools")
BiocManager::install("BSgenome.Mmusculus.UCSC.mm10")
BiocManager::install("motifmatchr")
BiocManager::install("chromVAR")

library(JASPAR2020)
library(TFBSTools)
library(patchwork)
library(motifmatchr)
library(chromVAR)

install.packages('ggseqlogo')
library(ggseqlogo)


# Adding motif information to the Seurat object

# Get a list of motif position frequency matrices from the JASPAR database
pfm <- getMatrixSet(
  x = JASPAR2020,
  opts = list(collection = "CORE", tax_group = 'vertebrates', all_versions = FALSE)
)

# add motif information
lymph <- AddMotifs(
  object = lymph,
  genome = BSgenome.Hsapiens.UCSC.hg38,
  pfm = pfm
)

# changing Idents back to coarse cell types (not split by Phase), so that can compare Tumour B cell vs B cell

lymph@meta.data %>% head(2)
unique(lymph$seurat_clusters)
Idents(lymph) <- lymph$seurat_clusters

new.cluster.ids <- c("Tumour B cell","T cell", "T cell", "T cell", "T cell", 
                     "T cell", "T cell", "Myeloid/monocytes", "Myeloid/monocytes", 
                     "B cell","T cell", "Tumour B cell", "Myeloid/monocytes", "Endothelial")


names(new.cluster.ids) <- levels(lymph)
lymph <- RenameIdents(lymph, new.cluster.ids)
DimPlot(lymph, reduction = "umap", label = TRUE)


da_peaks <- FindMarkers(
  object = lymph,
  ident.1 = 'Tumour B cell',
  ident.2 = 'B cell',
  only.pos = TRUE,
  test.use = 'LR',
  min.pct = 0.05
)

saveRDS(da_peaks, "da_peaks.RDS")

# get top differentially accessible peaks
da_peaks_arr <- arrange(da_peaks, p_val_adj)
top.da.peak <- rownames(da_peaks_arr[da_peaks_arr$p_val_adj < 0.0000000000001, ])


# find peaks open in Tumour B cells or B cells
open.peaks <- AccessiblePeaks(lymph, idents = c("Tumour B cell", "B cell"))

# match the overall GC content in the peak set
meta.feature <- GetAssayData(lymph, assay = "ATAC", slot = "meta.features")

peaks.matched <- MatchRegionStats(
  meta.feature = meta.feature[open.peaks, ],
  query.feature = meta.feature[top.da.peak, ],
  n = 50000
)

# test enrichment
enriched.motifs <- FindMotifs(
  object = lymph,
  features = top.da.peak
)


# plot enrichment
MotifPlot(
  object = lymph,
  motifs = head(rownames(enriched.motifs))
)


## using chromVar

saveRDS(lymph, "lymph_final.RDS")
main.chroms <- standardChromosomes(BSgenome.Hsapiens.UCSC.hg38)
keep.peaks <- which(as.character(seqnames(granges(lymph))) %in% main.chroms)
lymph[["ATAC"]] <- subset(lymph[["ATAC"]], features = rownames(lymph[["ATAC"]])[keep.peaks])

lymph <- RunChromVAR(
  object = lymph,
  genome = BSgenome.Hsapiens.UCSC.hg38
)

DefaultAssay(lymph) <- 'chromvar'

differential.activity <- FindMarkers(
  object = lymph,
  ident.1 = 'Tumour B cell',
  ident.2 = 'B cell',
  only.pos = TRUE,
  mean.fxn = rowMeans,
  fc.name = "avg_diff"
)

MotifPlot(
  object = lymph,
  motifs = head(rownames(differential.activity)),
  assay = 'ATAC'
)
